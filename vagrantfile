# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.define "mongodb" do |mongodb|
      mongodb.vm.box = "ubuntu/trusty64"
      mongodb.vm.provider "virtualbox" do |v|
        v.memory = 2048
      end

      mongodb.vm.provision :shell,
        :path => "tools/vagrant_provision_mongodb.sh"

      mongodb.vm.network "private_network", ip: "192.168.168.100"
      mongodb.vm.network :forwarded_port, guest: 27017, host: 27017,
        auto_correct: true
      mongodb.vm.network :forwarded_port, guest: 27018, host: 27018,
        auto_correct: true
      mongodb.vm.network :forwarded_port, guest: 27019, host: 27019,
        auto_correct: true
  end

  config.vm.define "debian" do |debian|
      debian.vm.box = "ubuntu/trusty64"

      debian.vm.provision :shell, :path => "tools/vagrant_provision_debian.sh"
  end

  config.vm.define "centos" do |centos|
      centos.vm.box = "chef/centos-7.0"

      centos.vm.provision :shell, :path => "tools/vagrant_provision_centos.sh"
  end

  config.vm.define "node00" do |node00|
      node00.vm.box = "ubuntu/trusty64"

      node00.vm.provision :shell, :path => "tools/vagrant_provision_node.sh"

      node00.vm.network "private_network", ip: "192.168.178.100"
      node00.vm.network :forwarded_port, guest: 9700, host: 9700,
        auto_correct: true
      node00.vm.network :forwarded_port, guest: 9900, host: 9900,
        auto_correct: true, protocol: "udp"
  end

  config.vm.define "node01" do |node01|
      node01.vm.box = "ubuntu/trusty64"

      node01.vm.provision :shell, :path => "tools/vagrant_provision_node.sh"

      node01.vm.network "private_network", ip: "192.168.178.101"
      node01.vm.network :forwarded_port, guest: 9700, host: 9701,
        auto_correct: true
      node01.vm.network :forwarded_port, guest: 9900, host: 9901,
        auto_correct: true, protocol: "udp"
  end

  config.vm.define "node02" do |node02|
      node02.vm.box = "ubuntu/trusty64"

      node02.vm.provision :shell, :path => "tools/vagrant_provision_node.sh"

      node02.vm.network "private_network", ip: "192.168.178.102"
      node02.vm.network :forwarded_port, guest: 9700, host: 9702,
        auto_correct: true
      node02.vm.network :forwarded_port, guest: 9900, host: 9902,
        auto_correct: true, protocol: "udp"
  end

  config.vm.define "node03" do |node03|
      node03.vm.box = "ubuntu/trusty64"

      node03.vm.provision :shell, :path => "tools/vagrant_provision_node.sh"

      node03.vm.network "private_network", ip: "192.168.178.103"
      node03.vm.network :forwarded_port, guest: 9700, host: 9703,
        auto_correct: true
      node03.vm.network :forwarded_port, guest: 9900, host: 9903,
        auto_correct: true, protocol: "udp"
  end


  config.vm.define "node10" do |node10|
      node10.vm.box = "ubuntu/trusty64"

      node10.vm.provision :shell, :path => "tools/vagrant_provision_node.sh"

      node10.vm.network "private_network", ip: "192.168.188.100"
      node10.vm.network :forwarded_port, guest: 9700, host: 9710,
        auto_correct: true
      node10.vm.network :forwarded_port, guest: 9900, host: 9910,
        auto_correct: true, protocol: "udp"
  end

  config.vm.define "node11" do |node11|
      node11.vm.box = "ubuntu/trusty64"

      node11.vm.provision :shell, :path => "tools/vagrant_provision_node.sh"

      node11.vm.network "private_network", ip: "192.168.188.101"
      node11.vm.network :forwarded_port, guest: 9700, host: 9711,
        auto_correct: true
      node11.vm.network :forwarded_port, guest: 9900, host: 9911,
        auto_correct: true, protocol: "udp"
  end

  config.vm.define "node12" do |node12|
      node12.vm.box = "ubuntu/trusty64"

      node12.vm.provision :shell, :path => "tools/vagrant_provision_node.sh"

      node12.vm.network "private_network", ip: "192.168.188.102"
      node12.vm.network :forwarded_port, guest: 9700, host: 9712,
        auto_correct: true
      node12.vm.network :forwarded_port, guest: 9900, host: 9912,
        auto_correct: true, protocol: "udp"
  end

  config.vm.define "node13" do |node13|
      node13.vm.box = "ubuntu/trusty64"

      node13.vm.provision :shell, :path => "tools/vagrant_provision_node.sh"

      node13.vm.network "private_network", ip: "192.168.188.103"
      node13.vm.network :forwarded_port, guest: 9700, host: 9713,
        auto_correct: true
      node13.vm.network :forwarded_port, guest: 9900, host: 9913,
        auto_correct: true, protocol: "udp"
  end
end
